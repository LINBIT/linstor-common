[
        {
                "blockcomment": "Mask for return codes that describe an error"
        },
        {
                "name": "MASK_ERROR",
                "value": "0xC000000000000000L",
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Mask for return codes that describe a warning"
        },
        {
                "name": "MASK_WARN",
                "value": "0x8000000000000000L",
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Mask for return codes that contains detail information\nabout the result of an operation"
        },
        {
                "name": "MASK_INFO",
                "value": "0x4000000000000000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_SUCCESS",
                "value": "0x0000000000000000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_CRT",
                "value": "0x0000000001000000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_MOD",
                "value": "0x0000000002000000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_DEL",
                "value": "0x0000000003000000L",
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "The next 4 significant bits are reserved for type (Node, ResDfn, Res,\nVolDfn, Vol, NetInterface, ...)"
        },
        {
                "name": "MASK_NODE",
                "value": "0x00000000003C0000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_RSC_DFN",
                "value": "0x0000000000380000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_RSC",
                "value": "0x0000000000340000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_VLM_DFN",
                "value": "0x0000000000300000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_VLM",
                "value": "0x00000000002C0000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_NODE_CONN",
                "value": "0x0000000000280000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_RSC_CONN",
                "value": "0x0000000000240000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_VLM_CONN",
                "value": "0x0000000000200000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_NET_IF",
                "value": "0x00000000001C0000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_STOR_POOL_DFN",
                "value": "0x0000000000180000L",
                "py": "long",
                "java": "long"
        },
        {
                "name": "MASK_STOR_POOL",
                "value": "0x0000000000140000L",
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 1-9: success"
        },
        {
                "name": "CREATED",
                "type": "BOR",
                "value": [1, "MASK_SUCCESS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "DELETED",
                "type": "BOR",
                "value": [2, "MASK_SUCCESS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "MODIFIED",
                "type": "BOR",
                "value": [3, "MASK_SUCCESS"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 100 - 999: failures"
        },
        {
                "blockcomment": "Codes 100 - 199: sql failures"
        },
        {
                "name": "FAIL_SQL",
                "type": "BOR",
                "value": [100, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": [101, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 200-299: invalid * failures"
        },
        {
                "name": "FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": [200, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": [201, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": [202, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": [203, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": [204, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": [205, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": [206, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": [207, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": [208, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": [209, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": [210, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": [211, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": [212, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_INVLD_PROP",
                "type": "BOR",
                "value": [213, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 300-399: dependency not found failures"
        },
        {
                "name": "FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": [300, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": [301, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": [302, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": [303, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": [304, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": [305, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": [306, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": [307, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": [308, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": [309, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": [310, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": [311, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 400-499: access denied failures"
        },
        {
                "name": "FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": [400, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": [401, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": [402, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": [403, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": [404, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": [405, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": [406, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": [407, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": [408, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": [409, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": [410, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 500-599: data already exists failures"
        },
        {
                "name": "FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": [500, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": [501, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": [502, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": [503, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": [504, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": [505, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": [506, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": [507, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": [508, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": [509, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": [510, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 600-699: data missing failures"
        },
        {
                "name": "FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": [600, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": [601, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": [602, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": [603, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": [604, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": [605, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 700-799: uuid mismatch failures"
        },
        {
                "name": "FAIL_UUID_NODE",
                "type": "BOR",
                "value": [600, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": [601, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_RSC",
                "type": "BOR",
                "value": [602, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": [603, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_VLM",
                "type": "BOR",
                "value": [604, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": [605, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": [606, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": [607, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": [608, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": [609, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": [610, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Other failures"
        },
        {
                "name": "FAIL_IN_USE",
                "type": "BOR",
                "value": [997, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": [998, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": [999, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Codes 1000-1999: warnings"
        },
        {
                "name": "WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": [1001, "MASK_WARN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": [1002, "MASK_WARN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "WARN_NOT_FOUND",
                "type": "BOR",
                "value": [3000, "MASK_WARN"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for node"
        },
        {
                "name": "RC_NODE_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_NODE", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for rsc_dfn"
        },
        {
                "name": "RC_RSC_DFN_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DFN_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_RSC_DFN", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for rsc"
        },
        {
                "name": "RC_RSC_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_RSC", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for vlm_dfn"
        },
        {
                "name": "RC_VLM_DFN_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DFN_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_VLM_DFN", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for vlm"
        },
        {
                "name": "RC_VLM_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_VLM", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for node_conn"
        },
        {
                "name": "RC_NODE_CONN_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NODE_CONN_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_NODE_CONN", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for rsc_conn"
        },
        {
                "name": "RC_RSC_CONN_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_RSC_CONN_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_RSC_CONN", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for vlm_conn"
        },
        {
                "name": "RC_VLM_CONN_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_VLM_CONN_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_VLM_CONN", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for net_if"
        },
        {
                "name": "RC_NET_IF_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_NET_IF_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_NET_IF", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for stor_pool_dfn"
        },
        {
                "name": "RC_STOR_POOL_DFN_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DFN_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_STOR_POOL_DFN", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "Return codes for stor_pool"
        },
        {
                "name": "RC_STOR_POOL_CREATED",
                "type": "BOR",
                "value": ["CREATED", "MASK_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_CRT_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_CRT", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MODIFIED",
                "type": "BOR",
                "value": ["MODIFIED", "MASK_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_MOD_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_MOD", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DELETED",
                "type": "BOR",
                "value": ["DELETED", "MASK_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_SQL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_SQL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_SQL_ROLLBACK",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_SQL_ROLLBACK"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NODE_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NODE_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NODE_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NODE_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_RSC_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_RSC_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_RSC_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_RSC_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NODE_ID",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NODE_ID"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_VLM_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_VLM_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_VLM_SIZE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_VLM_SIZE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_MINOR_NR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_MINOR_NR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_STOR_POOL_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_STOR_POOL_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NET_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NET_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NET_ADDR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NET_ADDR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NET_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NET_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_NET_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_NET_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_INVLD_PROP",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_INVLD_PROP"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_NOT_FOUND_DFLT_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_NOT_FOUND_DFLT_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_ACC_DENIED_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_ACC_DENIED_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_EXISTS_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_EXISTS_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_MISSING_PROPS",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_MISSING_PROPS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_MISSING_PROPS_NETCOM_TYPE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_TYPE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_MISSING_PROPS_NETCOM_PORT",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_MISSING_PROPS_NETCOM_PORT"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_MISSING_NETCOM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_MISSING_NETCOM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_MISSING_PROPS_NETIF_NAME",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_MISSING_PROPS_NETIF_NAME"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_MISSING_STLT_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_MISSING_STLT_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_NODE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_NODE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_RSC_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_RSC_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_RSC",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_RSC"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_VLM_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_VLM_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_VLM",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_VLM"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_NET_IF",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_NET_IF"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_NODE_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_NODE_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_RSC_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_RSC_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_VLM_CONN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_VLM_CONN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_STOR_POOL_DFN",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_STOR_POOL_DFN"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UUID_STOR_POOL",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UUID_STOR_POOL"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_IN_USE",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_IN_USE"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_UNKNOWN_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_UNKNOWN_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_FAIL_IMPL_ERROR",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "FAIL_IMPL_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_WARN_INVLD_OPT_PROP_NETCOM_ENABLED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "WARN_INVLD_OPT_PROP_NETCOM_ENABLED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_WARN_NOT_CONNECTED",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "WARN_NOT_CONNECTED"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_STOR_POOL_DEL_WARN_NOT_FOUND",
                "type": "BOR",
                "value": ["MASK_STOR_POOL", "MASK_DEL", "WARN_NOT_FOUND"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "UNKNOWN_API_CALL",
                "value": "0xCFFFFFFFFFFFFFFFL",
                "py": "long",
                "java": "long"
        },
        {
                "blockcomment": "SignIn codes"
        },
        {
                "name": "RC_SIGNIN_PASS",
                "type": "BOR",
                "value": [10000, "MASK_SUCCESS"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "RC_SIGNIN_FAIL",
                "type": "BOR",
                "value": [10000, "MASK_ERROR"],
                "py": "long",
                "java": "long"
        },
        {
                "name": "API_REPLY",
                "value": "Reply",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Create object APIs"
        },
        {
                "name": "API_CRT_NODE",
                "value": "CrtNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_RSC",
                "value": "CrtRsc",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_RSC_DFN",
                "value": "CrtRscDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_NET_IF",
                "value": "CrtNetIf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_VLM_DFN",
                "value": "CrtVlmDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_SNPSHT",
                "value": "CrtSnpsht",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_STOR_POOL_DFN",
                "value": "CrtStorPoolDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_STOR_POOL",
                "value": "CrtStorPool",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_NODE_CONN",
                "value": "CrtNodeConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_RSC_CONN",
                "value": "CrtRscConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CRT_VLM_CONN",
                "value": "CrtVlmConn",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Modify object APIs"
        },
        {
                "name": "API_MOD_NODE",
                "value": "ModNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_NODE_CONN",
                "value": "ModNodeConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_RSC",
                "value": "ModRsc",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_RSC_CONN",
                "value": "ModRscConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_RSC_DFN",
                "value": "ModRscDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_NET_IF",
                "value": "ModNetIf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_STOR_POOL",
                "value": "ModStorPool",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_STOR_POOL_DFN",
                "value": "ModStorPoolDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_VLM_DFN",
                "value": "ModVlmDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_VLM",
                "value": "ModVlm",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_VLM_CONN",
                "value": "ModVlmConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_SNPSHT",
                "value": "ModSnpsht",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Delete object APIs"
        },
        {
                "name": "API_DEL_NODE",
                "value": "DelNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_RSC",
                "value": "DelRsc",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_RSC_DFN",
                "value": "DelRscDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_NET_IF",
                "value": "DelNetIf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_VLM_DFN",
                "value": "DelVlmDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_STOR_POOL_DFN",
                "value": "DelStorPoolDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_STOR_POOL",
                "value": "DelStorPool",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_NODE_CONN",
                "value": "DelNodeConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_RSC_CONN",
                "value": "DelRscConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_VLM_CONN",
                "value": "DelVlmConn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_SNPSHT",
                "value": "DelSnpsht",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_RST_SNPSHT",
                "value": "RstSnpsht",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_AUTO_DPLY_RSC",
                "value": "AutoDplyRsc",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LOST_NODE",
                "value": "LostNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_CHK_STATE",
                "value": "ChkState",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Authentication APIs"
        },
        {
                "name": "API_SIGN_IN",
                "value": "SignIn",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Debug APIs"
        },
        {
                "name": "API_CRT_DBG_CNSL",
                "value": "CrtDbgCnsl",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DSTR_DBG_CNSL",
                "value": "DstrDbgCnsl",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "List object APIs"
        },
        {
                "name": "API_LST_NODE",
                "value": "LstNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_RSC",
                "value": "LstRsc",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_RSC_DFN",
                "value": "LstRscDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_NET_IF",
                "value": "LstNetIf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_VLM_DFN",
                "value": "LstVlmDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_VLM",
                "value": "LstVlm",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_SNPSHT",
                "value": "LstSnpsht",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_STOR_POOL",
                "value": "LstStorPool",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_STOR_POOL_DFN",
                "value": "LstStorPoolDfn",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Subscription APIs"
        },
        {
                "name": "API_CRT_SUBSCR",
                "value": "CrtSubscr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_SUBSCR",
                "value": "DelSubscr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_RPT_SPC",
                "value": "RptSpc",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_PING",
                "value": "Ping",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_PONG",
                "value": "Pong",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_MOD_INF",
                "value": "ModInf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_VSN_INF",
                "value": "VsnInf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_SET_CFG_VAL",
                "value": "SetCfgVal",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_DEL_CFG_VAL",
                "value": "DelCfgVal",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_LST_CFG_VAL",
                "value": "LstCfgVal",
                "py": "str",
                "java": "String"
        },
        {
                "name": "API_SHTDWN",
                "value": "Shtdwn",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Object property keys"
        },
        {
                "name": "KEY_UUID",
                "value": "UUID",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NODE",
                "value": "Node",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_RSC_DFN",
                "value": "RscDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_STOR_POOL_DFN",
                "value": "StorPoolDfn",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_1ST_NODE",
                "value": "FirstNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_2ND_NODE",
                "value": "SecondNode",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NODE_NAME",
                "value": "NodeName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NODE_TYPE",
                "value": "NodeType",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NODE_FLAGS",
                "value": "NodeFlags",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NODE_ID",
                "value": "NodeId",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_1ST_NODE_NAME",
                "value": "FirstNodeName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_2ND_NODE_NAME",
                "value": "SecondNodeName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_RSC_NAME",
                "value": "RscName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_STOR_POOL_NAME",
                "value": "StorPoolName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NET_IF_NAME",
                "value": "NetIfName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_SNPSHT_NAME",
                "value": "SnpshtName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_VLM_NR",
                "value": "VlmNr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_VLM_SIZE",
                "value": "VlmSize",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_MINOR_NR",
                "value": "MinorNr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_PEER_COUNT",
                "value": "PeerCount",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_AL_SIZE",
                "value": "AlSize",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_AL_STRIPES",
                "value": "AlStripes",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_ID",
                "value": "ID",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_ROLE",
                "value": "Role",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_MISSING_NAMESPC",
                "value": "MissingNameSpace",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Property namespaces"
        },
        {
                "name": "NAMESPC_NETCOM",
                "value": "NetCom",
                "py": "str",
                "java": "String"
        },
        {
                "name": "NAMESPC_DFLT",
                "value": "Default",
                "py": "str",
                "java": "String"
        },
        {
                "name": "NAMESPC_LOGGING",
                "value": "Logging",
                "py": "str",
                "java": "String"
        },
        {
                "name": "NAMESPC_ALLOC",
                "value": "Allocation",
                "py": "str",
                "java": "String"
        },
        {
                "name": "NAMESPC_NETIF",
                "value": "NetIf",
                "py": "str",
                "java": "String"
        },
        {
                "name": "NAMESPC_STLT",
                "value": "Satellite",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Property keys"
        },
        {
                "name": "KEY_PORT_NR",
                "value": "PortNr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_IP_ADDR",
                "value": "IPAddr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_BIND_ADDR",
                "value": "BindAddr",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NETCOM_TYPE",
                "value": "NetComType",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NETIF_NAME",
                "value": "NetIfName",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NETIF_TYPE",
                "value": "NetIfType",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_NETCOM_ENABLED",
                "value": "NetComEnabled",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_KEYSTORE",
                "value": "Keystore",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_TRUSTSTORE",
                "value": "Truststore",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_KEY_PWD",
                "value": "KeyPwd",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_KEYSTORE_PWD",
                "value": "KeystorePwd",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_TRUSTSTORE_PWD",
                "value": "TruststorePwd",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_SSL_PROTO",
                "value": "SslProto",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Property values"
        },
        {
                "name": "VAL_NETCOM_TYPE_SSL",
                "value": "SSL",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_NETCOM_TYPE_PLAIN",
                "value": "Plain",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_SSL_PROTO_TLSv1",
                "value": "TLSv1",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Node Type values"
        },
        {
                "name": "VAL_NODE_TYPE_CTRL",
                "value": "Controller",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_NODE_TYPE_STLT",
                "value": "Satellite",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_NODE_TYPE_CMBD",
                "value": "Combined",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_NODE_TYPE_AUX",
                "value": "Auxiliary",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Net interface Type values"
        },
        {
                "name": "VAL_NETIF_TYPE_IP",
                "value": "IP",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_NETIF_TYPE_RDMA",
                "value": "RDMA",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_NETIF_TYPE_ROCE",
                "value": "RoCE",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Authentication keys"
        },
        {
                "name": "KEY_SEC_IDENTITY",
                "value": "SecIdentity",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_SEC_ROLE",
                "value": "SecRole",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_SEC_TYPE",
                "value": "SecType",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_SEC_DOMAIN",
                "value": "SecDomain",
                "py": "str",
                "java": "String"
        },
        {
                "name": "KEY_SEC_PASSWORD",
                "value": "SecPassword",
                "py": "str",
                "java": "String"
        },
        {
                "blockcomment": "Default ports"
        },
        {
                "name": "DFLT_CTRL_PORT_SSL",
                "value": 3377,
                "py": "int",
                "java": "int"
        },
        {
                "name": "DFLT_CTRL_PORT_PLAIN",
                "value": 3376,
                "py": "int",
                "java": "int"
        },
        {
                "name": "DFLT_STLT_PORT_PLAIN",
                "value": 3366,
                "py": "int",
                "java": "int"
        },
        {
                "blockcomment": "Boolean values"
        },
        {
                "name": "VAL_TRUE",
                "value": "True",
                "py": "str",
                "java": "String"
        },
        {
                "name": "VAL_FALSE",
                "value": "False",
                "py": "str",
                "java": "String"
        }
]
