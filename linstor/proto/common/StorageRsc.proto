syntax = "proto2";

package com.linbit.linstor.proto.common;

import "linstor/proto/common/ProviderType.proto";

// Storage layer specific properties. See RscLayerData.proto for shared properties
message StorageRsc
{
    repeated StorageVlm   storage_vlms = 1;
}

message StorageVlm
{
    required uint32         vlm_nr = 1;
    
    optional string         device_path = 2;
    optional int64          allocated_size = 3;
    optional int64          usable_size = 4;
    optional string         disk_state = 5;
    
    oneof provider
    {
        DrbdDisklessVlm     drbd_diskless = 6;
        LvmVlm              lvm = 7;
        LvmThinVlm          lvm_thin = 8;
        ZfsVlm              zfs = 9;
        ZfsThinVlm          zfs_thin = 10;
        SwordfishTarget     sf_target = 11;
        SwordfishInitiator  sf_init = 12;
    }
}

message StorageVlmDfn
{
    required ProviderType provider_type = 1;
    oneof data
    {
        SwordfishVlmDfn swordfish = 2;
    }
}

message DrbdDisklessVlm
{
    // currently no special payload
}

message LvmVlm
{
    // currently no special payload
}

message LvmThinVlm
{
    // currently no special payload
}

message ZfsVlm
{
    // currently no special payload
}

message ZfsThinVlm
{
    // currently no special payload
}

message SwordfishTarget
{
    required SwordfishVlmDfn    sf_vlm_dfn = 1;
}

message SwordfishInitiator
{
    required SwordfishVlmDfn    sf_vlm_dfn = 1;
}

// By design there will be a SwordfishInitiator AND a SwordfishTarget refering to the same SwordfishVlmDfn. The pair of suffixed_rsc_name and vlm_nr is the primary key. 
// If multiple DrbdVlmDfns share the same pair of suffixed_rsc_name and vlm_nr but differ in the other settings, it is an implementation error
message SwordfishVlmDfn
{
    required string         rsc_name_suffix = 1;
    required uint32         vlm_nr = 2;
    
    optional string         vlmOdata = 3;
}
